// Generated by CoffeeScript 1.10.0
(function() {
  var Schedule,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Schedule = (function(superClass) {
    extend(Schedule, superClass);

    function Schedule() {
      return Schedule.__super__.constructor.apply(this, arguments);
    }

    Schedule.prototype.analyzePerson = function(person) {
      this.person = person;
      this.color = person.state.color || 'blue';
      return Schedule.__super__.analyzePerson.call(this, person);
    };

    Schedule.prototype.selectTd = function(td, color) {
      return Schedule.__super__.selectTd.call(this, td, this.color);
    };

    Schedule.prototype.change = function(td) {
      if (td.hasClass('hour')) {
        if (td.hasClass('selected')) {
          return this.unselectTd(td);
        } else {
          return this.selectTd(td);
        }
      }
    };

    Schedule.prototype.collectData = function() {
      var i, len, ref, result, td;
      result = {
        update_time: Date.now(),
        times: ""
      };
      ref = this.table.find('td.hour');
      for (i = 0, len = ref.length; i < len; i++) {
        td = ref[i];
        td = $(td);
        if (td.hasClass('selected')) {
          result.times += (td.attr('id')) + " ";
        }
      }
      return result;
    };

    return Schedule;

  })(Table);

  window.Schedule = Schedule;

}).call(this);

//# sourceMappingURL=schedule.js.map
